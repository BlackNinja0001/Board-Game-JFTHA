/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import jftha.heroes.*;
import jftha.main.Player;

/**
 *
 * @author shane
 */
public class PlayerNames extends javax.swing.JFrame {

    private int howmany, count;
    Player[] players;

    /**
     * Creates new form PlayerNames
     */
    public PlayerNames() {
        initComponents();
    }

    public PlayerNames(int numPlayers) {
        this.howmany = numPlayers;
        players = new Player[howmany];
        count = 1;
        initComponents();
    }

    public PlayerNames(int numPlayers, int c, Player[] playas) {
        this.howmany = numPlayers;
        players = playas;
        count = c;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerType = new javax.swing.ButtonGroup();
        name = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        playerNameField = new javax.swing.JTextField();
        BarbarianButton = new javax.swing.JRadioButton();
        NinjaButton = new javax.swing.JRadioButton();
        MageButton = new javax.swing.JRadioButton();
        KnightButton = new javax.swing.JRadioButton();
        MartialArtistButton = new javax.swing.JRadioButton();
        ThiefButton = new javax.swing.JRadioButton();
        PriestButton = new javax.swing.JRadioButton();
        MerchantButton = new javax.swing.JRadioButton();
        PaladinButton = new javax.swing.JRadioButton();
        input = new javax.swing.JButton();
        BarbarianInfoLabel = new javax.swing.JLabel();
        NinjaInfoLabel = new javax.swing.JLabel();
        MageInfoLabel = new javax.swing.JLabel();
        KnightInfoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        name.setText("Player Name:");

        playerType.add(BarbarianButton);
        BarbarianButton.setText("Barbarian");
        BarbarianButton.setName("Barbarian"); // NOI18N
        BarbarianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarbarianButtonActionPerformed(evt);
            }
        });

        playerType.add(NinjaButton);
        NinjaButton.setText("Ninja");
        NinjaButton.setName("Ninja"); // NOI18N
        NinjaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NinjaButtonActionPerformed(evt);
            }
        });

        playerType.add(MageButton);
        MageButton.setText("Mage");
        MageButton.setName("Mage"); // NOI18N
        MageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MageButtonActionPerformed(evt);
            }
        });

        playerType.add(KnightButton);
        KnightButton.setText("Knight");
        KnightButton.setName("Knight"); // NOI18N
        KnightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KnightButtonActionPerformed(evt);
            }
        });

        playerType.add(MartialArtistButton);
        MartialArtistButton.setText("Martial Artist");
        MartialArtistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MartialArtistButtonActionPerformed(evt);
            }
        });

        playerType.add(ThiefButton);
        ThiefButton.setText("Thief");
        ThiefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThiefButtonActionPerformed(evt);
            }
        });

        playerType.add(PriestButton);
        PriestButton.setText("Priest");
        PriestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriestButtonActionPerformed(evt);
            }
        });

        playerType.add(MerchantButton);
        MerchantButton.setText("Merchant");
        MerchantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MerchantButtonActionPerformed(evt);
            }
        });

        playerType.add(PaladinButton);
        PaladinButton.setText("Paladin");
        PaladinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PaladinButtonActionPerformed(evt);
            }
        });

        input.setText("Go");
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });

        BarbarianInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/info-resized.png"))); // NOI18N
        BarbarianInfoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BarbarianInfoLabelMouseClicked(evt);
            }
        });

        NinjaInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/info-resized.png"))); // NOI18N
        NinjaInfoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NinjaInfoLabelMouseClicked(evt);
            }
        });

        MageInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/info-resized.png"))); // NOI18N
        MageInfoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MageInfoLabelMouseClicked(evt);
            }
        });

        KnightInfoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/info-resized.png"))); // NOI18N
        KnightInfoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KnightInfoLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(BarbarianButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BarbarianInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NinjaButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(NinjaInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(MageButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MageInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(KnightButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(KnightInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MerchantButton)
                                    .addComponent(PriestButton)
                                    .addComponent(ThiefButton)
                                    .addComponent(MartialArtistButton)))
                            .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(playerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PaladinButton)
                            .addComponent(input))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(playerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BarbarianButton)
                        .addComponent(MartialArtistButton))
                    .addComponent(BarbarianInfoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NinjaButton)
                        .addComponent(ThiefButton))
                    .addComponent(NinjaInfoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MageButton)
                        .addComponent(PriestButton))
                    .addComponent(MageInfoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(KnightButton)
                        .addComponent(MerchantButton))
                    .addComponent(KnightInfoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PaladinButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(input)
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BarbarianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarbarianButtonActionPerformed
        
    }//GEN-LAST:event_BarbarianButtonActionPerformed

    private void KnightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KnightButtonActionPerformed
        
    }//GEN-LAST:event_KnightButtonActionPerformed

    private void ThiefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThiefButtonActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Thief not available in this version.");
    }//GEN-LAST:event_ThiefButtonActionPerformed

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
        Hero playerHero = null;
        if (anyValidButtonSelected()) {
            playerHero = assignPlayer(getSelectedButton(playerType), playerHero);
            if ((!playerNameField.getText().trim().isEmpty()) && (playerNameField.getText() != null)) {
                players[count - 1] = new Player(playerNameField.getText(), playerHero);

                this.setVisible(false);
                if (count == howmany) {
                    BoardGUI board = new BoardGUI(players);
                    board.setVisible(true);
                } else {
                    PlayerNames playName = new PlayerNames(howmany, count + 1, players);
                    playName.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "No name filled in.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No character picked.");
        }
    }//GEN-LAST:event_inputActionPerformed

    private boolean anyValidButtonSelected() {
        boolean result = false;
        if (BarbarianButton.isSelected()) {
            result = true;
        } else if (NinjaButton.isSelected()) {
            result = true;
        } else if (MageButton.isSelected()) {
            result = true;
        } else if (KnightButton.isSelected()) {
            result = true;
        }
        return result;
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.title.setText("Player " + count);
    }//GEN-LAST:event_formWindowOpened

    private void MartialArtistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MartialArtistButtonActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Martial Artist not available in this version.");
    }//GEN-LAST:event_MartialArtistButtonActionPerformed

    private void PriestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriestButtonActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Priest not available in this version.");
    }//GEN-LAST:event_PriestButtonActionPerformed

    private void MerchantButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MerchantButtonActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Merchant not available in this version.");
    }//GEN-LAST:event_MerchantButtonActionPerformed

    private void PaladinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PaladinButtonActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Paladin not available in this version.");
    }//GEN-LAST:event_PaladinButtonActionPerformed

    private void MageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MageButtonActionPerformed
        
    }//GEN-LAST:event_MageButtonActionPerformed

    private void NinjaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NinjaButtonActionPerformed
        
    }//GEN-LAST:event_NinjaButtonActionPerformed

    private void BarbarianInfoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarbarianInfoLabelMouseClicked
        JOptionPane.showMessageDialog(rootPane, 
                "The Barbarian knows no peace, only war. As people bullied him as an outcast, he had to learn to defend himself.\n"
                + "After he found his first weapon, he learned the craft of combat . . . and the joy of killing.\n"
                + "This man desires only for revenge against those who have wronged him in the past.\n\n"
                + "Stat Changes: +2 Strength, -2 Magic\n"
                + "Equipment: Animal Skin and Ax\n"
                + "Spells: None\n"
                + "Special: Wild Wrath - If attacked, has a 1-in-5 chance to attack (the attacker) back with 2x Strength.", 
                "About the Barbarian", 
                JOptionPane.INFORMATION_MESSAGE
                , new ImageIcon(getClass().getResource("/images/Barbarian-MedResize.png")));
    }//GEN-LAST:event_BarbarianInfoLabelMouseClicked

    private void NinjaInfoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NinjaInfoLabelMouseClicked
        JOptionPane.showMessageDialog(rootPane, 
                "The Ninja is not just any assassin, studying ninjutsu masters such as Hattori Hanzō and his rival Fūma Kotarō.\n "
                + "In return for sacrificing metal armor and a heavy weapon, he has learned to kill and flee the crime scene in 10 seconds flat.\n"
                + "His wish is to meet the masters, face to face.\n\n"
                + "Stat Changes: +2 Agility, -2 Defense\n"
                + "Equipment: Cloak and Dagger\n"
                + "Spells: None\n"
                + "Special: Shadow Step - Warp to any space 1-3 spaces away. Does not activate the space. Does not count as a dice roll.\n"
                + "If an enemy is in the way, no battle will occur, unless enemy is on the space the player lands on.\n"
                + "Cooldown period: 3 turns.", 
                "About the Ninja",
                JOptionPane.INFORMATION_MESSAGE
                , new ImageIcon(getClass().getResource("/images/Ninja-MedResize.png")));
    }//GEN-LAST:event_NinjaInfoLabelMouseClicked

    private void MageInfoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MageInfoLabelMouseClicked
        JOptionPane.showMessageDialog(rootPane, 
                "The Mage has read plenty of books on magic, making him a dangerous and clever person.\n"
                + "His arsenal of spells can perform deeds from spawning fearsome creatures to forming spiritual equipment.\n"
                + "For many years, he has yearned for only one thing: the Necronomicon.\n\n"
                + "Stat Changes: +2 Magic, -3 Strength, -3 Defense, +2 Spell slots\n"
                + "Equipment: Mage Robe and Spell Book\n"
                + "Spells: Fireball, Shield\n"
                + "Special: Inherent Intellect - Each spell is cast for 10% less SE.", 
                "About the Mage",
                JOptionPane.INFORMATION_MESSAGE
                , new ImageIcon(getClass().getResource("/images/Mage-MedResize.png")));
    }//GEN-LAST:event_MageInfoLabelMouseClicked

    private void KnightInfoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KnightInfoLabelMouseClicked
        JOptionPane.showMessageDialog(rootPane, 
                "The Knight is known throughout his hometown as the “Ultimate Shield”. He claims that none can penetrate his unstoppable armor\n"
                + "Rumor has it that his armor descended from the heavens, blessed by none other than the Almighty One. But deep down inside his armor, he knows that even he is not invincible.\n"
                + "He plans to pummel through his opponents, retrieve the Artifact, and receive immortality.\n\n"
                + "Stat Changes: +2 Defense, -2 Agility\n"
                + "Equipment: Suit of Armor and Iron Sword\n"
                + "Spells: None\n"
                + "Special: Portable Protection - When activated, cannot move for the next turn. After missed turn, become invincible for 3 turns.\n"
                + "Cooldown period: 10 turns.", 
                "About the Knight",
                JOptionPane.INFORMATION_MESSAGE
                , new ImageIcon(getClass().getResource("/images/Knight-MedResize.png")));
    }//GEN-LAST:event_KnightInfoLabelMouseClicked

    private Hero assignPlayer(JRadioButton b, Hero playerHero) {
        String s = b.getText();
        if (s.equalsIgnoreCase("Barbarian")) {
            playerHero = new Barbarian();
        } else if (s.equalsIgnoreCase("Ninja")) {
            playerHero = new Ninja();
        } else if (s.equalsIgnoreCase("Mage")) {
            playerHero = new Mage();
        } else if (s.equalsIgnoreCase("Knight")) {
            playerHero = new Knight();
        } //Martial Artist, Thief, Priest, Merchant, Paladin not yet available
        return playerHero;
    }

    public JRadioButton getSelectedButton(ButtonGroup group) {
        Enumeration<AbstractButton> e = group.getElements();
        while (e.hasMoreElements()) {
            AbstractButton b = e.nextElement();
            if (b.isSelected()) {
                return (JRadioButton) b;
            }
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerNames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerNames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerNames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerNames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BarbarianButton;
    private javax.swing.JLabel BarbarianInfoLabel;
    private javax.swing.JRadioButton KnightButton;
    private javax.swing.JLabel KnightInfoLabel;
    private javax.swing.JRadioButton MageButton;
    private javax.swing.JLabel MageInfoLabel;
    private javax.swing.JRadioButton MartialArtistButton;
    private javax.swing.JRadioButton MerchantButton;
    private javax.swing.JRadioButton NinjaButton;
    private javax.swing.JLabel NinjaInfoLabel;
    private javax.swing.JRadioButton PaladinButton;
    private javax.swing.JRadioButton PriestButton;
    private javax.swing.JRadioButton ThiefButton;
    private javax.swing.JButton input;
    private javax.swing.JLabel name;
    private javax.swing.JTextField playerNameField;
    private javax.swing.ButtonGroup playerType;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
